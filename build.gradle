plugins {
    //    id 'com.github.hierynomus.license' version '0.13.1'
    id 'maven-publish'
    id 'net.nemerosa.versioning' version '2.4.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'com.github.ben-manes.versions' version '0.14.0'
}

apply plugin: 'java'
apply from: 'gradle/publishing.gradle'

sourceCompatibility = '11'
targetCompatibility = '11'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

wrapper {
    gradleVersion = '6.0'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}

// write build info to build.properties in resource folder
task writeBuildInfo() {

    new File(project.rootDir,
            "src/main/resources/eu/mihosoft/nfxhtml5/nfxhtml5dist/linux/x86").mkdirs()
    new File(project.rootDir,
            "src/main/resources/eu/mihosoft/nfxhtml5/nfxhtml5dist/linux/x64").mkdirs()
    new File(project.rootDir,
            "src/main/resources/eu/mihosoft/nfxhtml5/nfxhtml5dist/windows/x86").mkdirs()
    new File(project.rootDir,
            "src/main/resources/eu/mihosoft/nfxhtml5/nfxhtml5dist/windows/x64").mkdirs()
    new File(project.rootDir,
            "src/main/resources/eu/mihosoft/nfxhtml5/nfxhtml5dist/macos/x64").mkdirs()

    def buildInfoCode = new File(project.rootDir,
     "src/main/java/eu/mihosoft/nfxhtml5/nfxhtml5dist/BuildInfo.java")
    buildInfoCode.getParentFile().mkdirs()
    buildInfoCode.write("package eu.mihosoft.nfxhtml5.nfxhtml5dist;\n"
        +"public class BuildInfo {\n"
        +"  public static final String VERSION   = \"${project.version}\";\n"
        +"  public static final String TIMESTAMP = \"${project.buildTimestamp}\";\n"
        +"  public static final String DATE      = \"${project.buildDate}\";\n"
        +"  public static final String TIME      = \"${project.buildTime}\";\n"
        +"  public static final String REV       = \"${versioning.info.commit}\";\n"
        +"}\n"
    )
}
compileJava {
    dependsOn writeBuildInfo
}

